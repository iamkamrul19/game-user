import type { Metadata } from "next";
import { Geist, Geist_Mono, Poppins, Inter, Lexend } from "next/font/google";
import "./globals.css";
import ReduxProvider from "@/redux/redux-provider";
import MainLayout from "@/components/common/layout/MainLayout";
import { Toaster } from "react-hot-toast";
import CartDrawer from "@/components/common/cart/CartDrawer";
import GlobalLayout from "@/components/common/layout/GlobalLayout";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const poppins = Poppins({
  subsets: ["latin"],
  display: "swap",
  weight: ["300", "400", "500", "600", "700", "800", "900"],
  variable: "--poppins",
});
const inter = Inter({
  subsets: ["latin"],
  display: "swap",
  weight: ["300", "400", "500", "600", "700", "800", "900"],
  variable: "--inter",
});
const lexend = Lexend({
  subsets: ["latin"],
  display: "swap",
  weight: ["300", "400", "500", "600", "700", "800", "900"],
  variable: "--lexend",
});

export const metadata: Metadata = {
  title: "GG Subscription",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
          integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A=="
          crossOrigin="anonymous"
          referrerPolicy="no-referrer"
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${poppins.variable} ${inter.variable} ${lexend.variable} antialiased`}
      >
        <ReduxProvider>
          <GlobalLayout>
            <MainLayout>{children}</MainLayout>
            <CartDrawer />
          </GlobalLayout>
        </ReduxProvider>
        <Toaster />
      </body>
    </html>
  );
}
